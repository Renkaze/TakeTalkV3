{"version":3,"sources":["meteor://üíªapp/lib/Router.js"],"names":[],"mappings":"yfile":"/lib/Router.js","sourcesContent":["/** The configuration for the main layout */\nRouter.configure({\n  layoutTemplate: 'layout'\n});\n\n/** The route to the home page */\nRouter.route('/', {name:'home'});\n\n/** The route to the tutorial page*/\nRouter.route('/tutorial', {name: 'tutorial'});\n\nRouter.route('/create', {name: 'create'});\n\n/** The route to the downloads page */\nRouter.route('/downloads', {name: 'downloads'});\n\n/** The route to the create page\nRouter.route('/create', function () {\n  this.render('create');\n});*/\n\n/** The route to the meeting page */\nRouter.route('/meeting/:_meetingId', {\n  name: 'meeting',\n  data: function() {\n      // Ajout d'un meeting pour les tests accessible via /meeting/test\n      // !!! A commenter en prod !!!\n      var id = 'test';\n      if (this.params._meetingId == id && Meetings.findOne({_id: id, status: \"ongoing\"}) === undefined) {\n          //Meteor.call('resetAll');\n\n          Meetings.insert({\n              name: 'WorkShop Evry',\n              status: \"ongoing\",\n              password: '0000',\n              reportLink: 'https://docs.google.com/document/d/15Pcc6L1ofe4bY2uxg0yxvaAZO_XZQPe8JlsnvnDUEaQ/edit?usp=sharing',\n              _id: id\n          });\n          Users.insert({ name:'Franck FORET',\n              email: 'franckforet@test.com',\n              type: \"animator\",\n              status: \"online\",\n              meeting: id,\n              _id: 'fforet'\n          });\n\n          Session.set(\"meetingId\", id);\n          //Session.set(\"ordres\", ['Motiver les √©l√®ves', 'Former les participants', 'Pr√©parer le repas du soir']);\n          //Session.set(\"ordreTimes\", [90, 130, 268]);\n          Session.set(\"userId\", 'fforet');\n\n          /* Ajout d'une ligne dans le fichier d'historisation (log.txt)\n          var fs = require('fs');\n          var date = new Date();\n          fs.writeFile(\"/log.txt\", \"[ \" + date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear() + \" - \" +\n              date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \" ] \" +\n              \"Ajout du meeting \\\"\" + Session.get(\"meetingId\") + \"\\\" pour test.\", function(err) {\n              if(err) {\n                  return console.log(\"Erreur dans l'enregistrement des logs : \" + err);\n              }\n              console.log(\"The file was saved!\");\n          }); //*/\n      } // FIN ajout meeting test\n      else{\n          Session.set(\"meetingId\", this.params._meetingId);\n      }\n\n  // Recherche du meeting dont l'id est pass√© en param√®tre\n  // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©\n    var meeting = Meetings.findOne({_id: this.params._meetingId, status: \"ongoing\"});\n    if(meeting === undefined){\n        console.log('undefined meeting...');\n        Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n    }\n\n    //Alimentation du tableau users avec les utilisateur pr√©sent au meeting\n    var users = [];\n    Users.find({meeting: this.params._meetingId}).forEach(function(user) {\n        var paroles = [];\n        if(user.paroles !== undefined) {\n            paroles = user.paroles;\n        }\n        users.push({name: user.name, paroles: paroles});\n    });\n\n    //Alimentation du tableau speeches avec les demandes de parole du meeting\n    var speeches = [];\n    Speeches.find({meeting: this.params._meetingId, status: {$in: [\"ongoing\", \"pending\"]}}, {sort: {rank: 1}}).forEach(function(speech) {\n        var minutesLeft = Math.floor(speech.timeLeft / 60);\n        var secondsLeft = speech.timeLeft % 60;\n        var minutes = Math.floor(speech.time / 60);\n        var seconds = speech.time % 60;\n\n        if(secondsLeft < 10) {\n            secondsLeft = \"0\" + secondsLeft;\n        }\n        if(seconds < 10) {\n            seconds = \"0\" + seconds;\n        }\n\n        speeches.push({\n            user: Users.findOne({_id: speech.user}).name,\n            timeLeft: minutesLeft + \":\" + secondsLeft,\n            //timeString: speech.timeString,\n            time: minutes + \":\" + seconds,\n            //orderChoose: speech.orderChoose,\n            //subject: speech.subject,\n            status: speech.status == \"ongoing\",\n            _id: speech._id,\n            rank : speech.rank\n        });\n    });\n\n    // Alimentation de la variable user avec l'utilisateur actuel\n    var user = Users.findOne({_id: Session.get(\"userId\")});\n    var isAnimator = false;\n    if(user !== undefined){\n        if(user.type == \"animator\") isAnimator = true;\n    }\n\n    var talk = \"Talk\";\n\n    //Variable definissant le statut du bouton permettant de lancer le d√©compte d'un speech ou de l'arr√™ter\n    var proceed = \"Wait\";\n    if(Speeches.findOne({meeting: this.params._meetingId, status: \"ongoing\"}) == undefined) {\n      proceed = \"Proceed\";\n    }\n\n    //Variable de statut des bouton 'proceed/wait' et 'next'\n    var disabled = \"\";\n    if(Speeches.findOne({meeting: this.params._meetingId, status: {$in: [\"ongoing\", \"pending\"]}}) == undefined) {\n      disabled = \"disabled\";\n    }\n\n    Speeches.find({user: Session.get(\"userId\")}).observe({\n      removed: function(speech) {\n          if (!isAnimator) {\n              $(\"#speech-delete-modal\").modal(\"show\");\n          }\n      }\n    });\n\n    return {\n      meeting:    meeting.name,\n      users:      users,\n      speeches:   speeches,\n      isAnimator: isAnimator,\n      talk:       talk,\n      proceed:    proceed,\n      disabled:   disabled\n    };\n  }\n});\n\n/** The route to the join page */\nRouter.route('/join/:_meetingId/:_userId', {\n    name: 'join',\n    data: function() {\n\n        // Recherche du meeting dont l'id est pass√© en param√®tre\n        // Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun meeting n'est trouv√©\n        var meeting = Meetings.findOne({_id: this.params._meetingId});\n        if(meeting === undefined){\n            console.log('meeting undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        //Recherche de l'utilisateur\n        //Redirection vers une page d'erreur \"404 not found\" lorsqu'aucun utilisateur n'est trouv√©\n        //Ne permet qu'aux utilisateurs invit√©s de rejoindre un meeting\n        var user = Users.findOne({_id: this.params._userId});\n        if(user === undefined){\n            console.log('user undefined');\n            Router.configure({layoutTemplate: 'layout', notFoundTemplate: '404'});\n        }\n\n        Session.set(\"meetingId\", this.params._meetingId);\n        Session.set(\"userId\", this.params._userId);\n\n        return {};\n    }\n});\n\n/** The route to the lineup page */\nRouter.route('/meeting/:_meetingId/lineup', function () {\n    this.render('lineup');\n});\n\n/** The route to the end page */\nRouter.route('/end', function () {\n    this.render('end');\n});\n"]}