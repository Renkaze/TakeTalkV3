{"version":3,"sources":["meteor://üíªapp/client/javascripts/events/lineup.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/client/javascripts/events/lineup.js","sourcesContent":["/** The events that lineup template contains */\nTemplate.lineup.events({\n    /** A click on cancelLineup goes back to the meeting page */\n    'click #cancelLineup': function(e) {\n        e.preventDefault();\n        Router.go('/meeting/' + Session.get(\"meetingId\"));\n    },\n\n    /** A click on lineup creates a speech and goes back to the meeting page */\n    'click .lineUp': function(e, t) {\n        e.preventDefault();\n\t\tvar order = t.find(\"#order\").value;\n        var submitTime = t.find(\".timeButton:checked\").value;\n        var userId = $(e.target).attr(\"user-id\");\n        var rank = 1;\n\n        //Recherche du speech ayant le plus haut rang\n        speeches = Speeches.find({meeting: Session.get(\"meetingId\")}, {sort: {rank: -1}}).fetch();\n        if (speeches.length > 0) {\n            rank = speeches[0].rank+1;\n        }\n\t\t\n        if (submitTime == 'rapide') {\n            submitTime = \"intervention rapide\"\n        }\n        if (submitTime == 'plus') {\n            submitTime = \"plus de 10 minutes\"\n        }\n\n        //Cr√©ation de la demande de parole\n        if (isNaN(submitTime)) {\n            Speeches.insert({\n                subject: t.find(\"#keywords\").value,\n                timeLeft: 0,\n                time: 0,\n\t\t\t\torderChoose: order,\n                timeString: submitTime,\n                status: \"pending\",\n                user: userId,\n                meeting: Session.get(\"meetingId\"),\n                rank: rank\n            });\n        } else {\n            Speeches.insert({\n                subject: t.find(\"#keywords\").value,\n                timeLeft: 0,\n                time: submitTime,\n\t\t\t\torderChoose: order,\n                timeString: \"\",\n                status: \"pending\",\n                user: userId,\n                meeting: Session.get(\"meetingId\"),\n                rank: rank\n            });\n        }\n\n        //redirection vers la page du meeting\n        Router.go('/meeting/' + Session.get(\"meetingId\"));\n    }\n});\n\nTemplate.lineup.helpers ({\n\n    //Retourne la liste des utilisateurs ajout√©s en local\n    guests: function () {\n        var guests = Session.get(\"guests\");\n        var names = new Array(guests.length);\n\n        for (i = 0; i < guests.length; i++) {\n            names[i] = {\"name\" : guests[i]};\n        }\n\n        return names;\n    },\n\n    //Retourne l'ordre du jour\n    ordres: function () {\n        return Session.get(\"ordres\");\n    },\n\n    //Retourne vrai si dse utilisateurs ont √©t√© ajout√©s en local\n    hasGuest: function () {\n        if (Session.get(\"guests\") === undefined) {\n            return false;\n        }\n        return Session.get(\"guests\").length > 0;\n    },\n\n    //Retourne l'utilisateur local\n    currentUser: function(){\n        return Users.findOne({_id: Session.get(\"userId\")});\n    }\n});"]}