{"version":3,"sources":["meteor://ğŸ’»app/client/javascripts/events/create.js"],"names":[],"mappings":"yfile":"/client/javascripts/events/create.js","sourcesContent":["/** The events that create template contains */\nTemplate.create.events({\n\n    //CrÃ©ation d'un nouveau champ de saisie lorsqu'un caractÃ¨re est renseignÃ©\n    'keyup .participant-email-input': function(e) {\n        var input = $(e.target);\n\n        if (input.val().length > 0) {\n            var rank = input.parents(\".participant-email\")[0].getAttribute('rank');\n            var form = input.parents(\"#create-form\");\n            var nextRank = parseInt(rank) + 1;\n\n            if ($(form).find('.participant-email[rank=\"'+nextRank+'\"]').length < 1) {\n                var newInput = $(input.parents(\".participant-email\")[0].cloneNode(true));\n                newInput.find(\".participant-email-input\").val(\"\");\n                newInput.attr('rank', nextRank);\n                $(input.parents(\".participant-email-group\")[0]).append(newInput)\n            }\n        }\n    },\n\n    //CrÃ©ation d'un nouveau champ de saisie lorsqu'un caractÃ¨re est renseignÃ©\n    'keyup .agenda-name-input': function(e) {\n        var input = $(e.target);\n\n        if (input.val().length > 0) {\n            var rank = input.parents(\".agenda-group\")[0].getAttribute('rank');\n            var form = input.parents(\"#create-form\");\n            var nextRank = parseInt(rank) + 1;\n\n            if ($(form).find('.agenda-group[rank=\"'+nextRank+'\"]').length < 1) {\n                var newInput = $(input.parents(\".agenda-group\")[0].cloneNode(true));\n                newInput.find(\".agenda-name-input\").val(\"\");\n                newInput.find(\".agenda-time-input\").val(\"\");\n                newInput.attr('rank', nextRank);\n                $(input.parents(\".agenda-group\")[0]).after(newInput)\n            }\n        }\n    },\n\n    'submit form': function(e) {\n        e.preventDefault();\n        //RÃ©cupÃ©ration des Ã©lÃ©ments DOM des champs de saisie\n        var ordreInputs = e.target.ordreDuJour;\n        var ordreTimeInputs = e.target.ordreDuJourTemps;\n        var participantsInputs = e.target.participantsEmails;\n\n        //RÃ©cupÃ©ration des valeurs de l'ordre du jour, temps estimÃ©s et des emails d'invitation\n        var ordres = [];\n        var ordreTimes = [];\n        var participantsEmails = [];\n\n        for (i = 0; i < participantsInputs.length; i++) {\n            if (participantsInputs[i].value != \"\") {\n                participantsEmails.push(participantsInputs[i].value);\n            }\n        }\n        for (i = 0; i < ordreInputs.length; i++) {\n            if (ordreInputs[i].value != \"\") {\n                ordres.push(ordreInputs[i].value);\n                ordreTimes.push(ordreTimeInputs[i].value);\n            }\n        }\n\n        //CrÃ©ation du mot de passe du meeting\n        var pass = Math.floor((Math.random() * 10000) + 1);\n        if(pass < 10){\n            pass = '000' + pass;\n        }else if(pass < 100){\n            pass = '00' + pass;\n        }else if(pass < 1000){\n            pass = '0' + pass;\n        }\n\n        //CrÃ©ation du meeting\n        var meetingId = Meetings.insert({\n            name: e.target.meetingName.value,\n            status: \"ongoing\",\n            ordres: ordres,\n            ordreTimes: ordreTimes,\n            password: pass,\n            reportLink: (e.target.reportLink.value !== undefined) ? e.target.reportLink.value : \"\"\n        });\n\n        //CrÃ©ation de l'utilisateur animateur\n        var userId = Users.insert({\n            name: e.target.animatorName.value,\n            email: e.target.animatorEmail.value,\n            type: \"animator\",\n            status: \"online\",\n            meeting: meetingId\n        });\n\n        localStorage.setItem(meetingId, meetingId);\n\n        //DÃ©finition du corp du mail envoyÃ© Ã  l'animateur et aux invitÃ©s\n        var emailBody = 'Here is the link for the meeting : taketalk.meteor.com/join/' + meetingId + '/' + userId + '\\n';\n        emailBody += (e.target.reportLink.value !== undefined) ? 'Here is the link of the report : ' + e.target.reportLink.value + '\\n\\n' : \"\";\n        emailBody += 'If you quit the meeting and want to return, here is the password : ' + pass;\n\n        //Alimentation des variable de la session\n        Session.set(\"meetingId\", meetingId);\n        Session.set(\"userId\", userId);\n        Session.set(\"ordres\", ordres);\n        Session.set(\"ordreTimes\", ordreTimes);\n\n        //Envoi du mail Ã  l'animateur\n        Meteor.call('sendEmail',\n            e.target.animatorEmail.value,\n            'noreply@taketalk.com',\n            'TakeTalk session created',\n            'You have just created a session of TakeTalk. \\n\\n' + emailBody\n        );\n\n        //Envoi des mails aux invitÃ©s\n        for(var i = 0; i < participantsEmails.length; i++) {\n            userId = Users.insert({name: 'participant pending', email: participantsEmails[i], type: \"participant\", status: \"pending\", meeting: meetingId});\n            Meteor.call('sendEmail', participantsEmails[i], 'noreply@taketalk.com', 'TakeTalk invitation',\n                'You are invited to a session of TakeTalk. \\n\\n' + emailBody\n            );\n        }\n\n        //Redirection vers la page du meeting\n        Router.go('/meeting/' + meetingId);\n    }\n});\n"]}